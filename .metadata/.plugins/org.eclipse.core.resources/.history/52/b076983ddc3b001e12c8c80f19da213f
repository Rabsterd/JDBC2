package edu.kh.kdbc1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Scanner;

import edu.kh.kdbc1.model.vo.emp2;

public class JDBCExample5 {
	
	public static void main(String[] args) {
		// 입사일을 입력("2022-09-06") 받아
		// 입력받은 값보다 먼저 입사한 사람의
		// 이름, 입사일, 성별(M,F) 조회
		
		Scanner sc = new Scanner(System.in);
		
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		
		try {
			
			System.out.println("입사일 입력 : ");
			String input = sc.nextLine();
			
			Class.forName("oracle.jdbc.driver.OracleDriver");
			
			String type = "jdbc:oracle:thin:@"; // JDBC 드라이버 종류
			String ip = "localhost";	
			String port = ":1521"; // 포트번호
			String sid = ":XE"; // DB 이름			
			String user = "kh"; // 사용자 계정			
			String pw = "kh1234"; // 비밀번호
			
			conn = DriverManager.getConnection(type + ip + port + sid, user, pw);
							
			String sql = "SELECT EMP_NAME, "
					+ " TO_CHAR(HIRE_DATE, 'YYYY\"년\" MM\"월\" DD\"일\"') 입사일, "
					+ " DECODE(SUBSTR(EMP_NO, 8, 1), '1', '남', '2', '여') AS 성별"
					+ " FROM EMPLOYEE"
					+ " WHERE HIRE_DATE < TO_DATE('" + input + "')";
			
			stmt = conn.createStatement();
			
			rs = stmt.executeQuery(sql);
			
			List<emp2> list = new ArrayList<emp2>();
			
			while(rs.next()) {
				String empName = rs.getString("EMP_NAME");
				Date hireDate = rs.getDate("HIRE_DATE");
				String gender = rs.getString("GENDER");
				
				emp2 emp = new emp2(); // 기본 생성자로 Employee 객체 생성
				
				emp.setEmpName(rs.getString("이름")); // 조회 시 컬럼명이 "이름"
				emp.setHireDate(rs.getString("입사일")); // 조회 시 컬럼명이 "이름"
				emp.setGender(rs.getString("성별").charAt(0) ); // 조회 시 컬럼명이 "이름"
				// Java의 char : 문자 1개 의미
				// DB의 char : 고정길이 문자열(== String)
				
				list.add(emp);
			}
			
			if(list.isEmpty()) {
				System.out.println("조회 결과 없음");
			} else {
				for(int i= 0; i<list.size(); i++) {
					System.out.printf("%02d) %s / %s / %c \n",
							i+1, 
							list.get(i).getEmpName(),
							list.get(i).getHireDate(),
							list.get(i).getGender()    );
				}
			}
			
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
			if(rs != null) rs.close();
			if(stmt != null) stmt.close();
			if(conn != null)conn.close();
			}catch(Exception e){
				e.printStackTrace();
			}
			
		}
		
	}
}
